(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8402],{5475:function(s,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/web/quickstart",function(){return o(6672)}])},6672:function(s,n,o){"use strict";o.r(n),o.d(n,{__N_SSG:function(){return r}});var a=o(1527),e=o(313);function t(s){let n=Object.assign({h1:"h1",p:"p",a:"a",strong:"strong",h2:"h2",pre:"pre",code:"code",h3:"h3"},(0,e.ah)(),s.components),{EmbedLink:o}=n;return o||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("EmbedLink",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{children:"Quickstart"}),"\n",(0,a.jsxs)(n.p,{children:["Hey there \uD83D\uDC4B, this is the quickstart guide. If you want to learn the process checkout ",(0,a.jsx)(n.a,{href:"/web/",children:"everything about ENS in dApps"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["This quickstart guide assumes you have a basic understanding of ",(0,a.jsx)(n.strong,{children:"react, ethers, wagmi, tailwindcss, and web3"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"showing-the-user-profile",children:"Showing the User Profile"}),"\n",(0,a.jsxs)(n.p,{children:["The below codesnippet demonstrates how you can create a basic UserProfile section that shows the users ENS name and avatar.\nThe snippet leverages the ",(0,a.jsx)(n.a,{href:"https://wagmi.sh/react/hooks/useAccount",children:"useAccount"}),", ",(0,a.jsx)(n.a,{href:"https://wagmi.sh/react/hooks/useEnsName",children:"useEnsName"}),", and ",(0,a.jsx)(n.a,{href:"https://wagmi.sh/react/hooks/useEnsAvatar",children:"useEnsAvatar"})," hooks from wagmi."]}),"\n",(0,a.jsx)("div",{className:"card h-24 flex items-center justify-center",children:(0,a.jsxs)("div",{className:"flex items-center gap-2",children:[(0,a.jsx)("img",{src:"https://v3x.space/ens-docs/pfp.webp",className:"w-8 h-8 rounded-full"}),(0,a.jsxs)("div",{className:"flex flex-col gap-0 leading-3 pr-10",children:[(0,a.jsx)("span",{className:"font-bold",children:"luc.eth"}),"\n",(0,a.jsx)("span",{children:"0x123...456"})]})]})}),"\n",(0,a.jsx)(n.pre,{language:"tsx",code:'import { useAccount, useEnsName, useEnsAvatar } from \'wagmi\';\nimport { formatAddress } from \'ens-tools\';\n\nexport const UserProfile: FC = () => {\n    const { address } = useAccount();\n    const { data: ensName } = useEnsName({\n        address,\n    });\n    const { data: ensAvatar } = useEnsAvatar({\n        address,\n    });\n\n    return (\n        <div className="flex items-center gap-2">\n            <img\n                src={ensAvatar || \'https://v3x.space/ens-docs/pfp.webp\'}\n                className="w-8 h-8 rounded-full"\n            />\n            <div className="flex flex-col gap-0 leading-3 pr-10">\n                {ensName && <span className="font-bold">{ensName}</span>}\n                <span>{formatAddress(address)}</span>\n            </div>\n        </div>\n    );\n};\n',meta:"focus=1,4:9",children:(0,a.jsx)(n.code,{className:"language-tsx",children:'<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { useAccount</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> useEnsName</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> useEnsAvatar } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;wagmi&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { formatAddress } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ens-tools&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">UserProfile</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">FC</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">address</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">useAccount</span><span style="color: var(--shiki-color-text)">();</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { data: </span><span style="color: var(--shiki-token-constant)">ensName</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">useEnsName</span><span style="color: var(--shiki-color-text)">({</span></span>\n<span><span style="color: var(--shiki-color-text)">        address</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    });</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { data: </span><span style="color: var(--shiki-token-constant)">ensAvatar</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">useEnsAvatar</span><span style="color: var(--shiki-color-text)">({</span></span>\n<span><span style="color: var(--shiki-color-text)">        address</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    });</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> (</span></span>\n<span><span style="color: var(--shiki-color-text)">        &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">className</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flex items-center gap-2&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            &lt;</span><span style="color: var(--shiki-token-string-expression)">img</span></span>\n<span><span style="color: var(--shiki-color-text)">                </span><span style="color: var(--shiki-token-function)">src</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">{ensAvatar </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https://v3x.space/ens-docs/pfp.webp&#39;</span><span style="color: var(--shiki-color-text)">}</span></span>\n<span><span style="color: var(--shiki-color-text)">                </span><span style="color: var(--shiki-token-function)">className</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;w-8 h-8 rounded-full&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">            /&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">className</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flex flex-col gap-0 leading-3 pr-10&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">                {ensName </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> &lt;</span><span style="color: var(--shiki-token-string-expression)">span</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">className</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;font-bold&quot;</span><span style="color: var(--shiki-color-text)">&gt;{ensName}&lt;/</span><span style="color: var(--shiki-token-string-expression)">span</span><span style="color: var(--shiki-color-text)">&gt;}</span></span>\n<span><span style="color: var(--shiki-color-text)">                &lt;</span><span style="color: var(--shiki-token-string-expression)">span</span><span style="color: var(--shiki-color-text)">&gt;{</span><span style="color: var(--shiki-token-function)">formatAddress</span><span style="color: var(--shiki-color-text)">(address)}&lt;/</span><span style="color: var(--shiki-token-string-expression)">span</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">            &lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">        &lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">    );</span></span>\n<span><span style="color: var(--shiki-color-text)">};</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(n.h2,{id:"name-lookups",children:"Name Lookups"}),"\n",(0,a.jsx)(n.pre,{language:"ts",code:"",children:(0,a.jsx)(n.code,{className:"language-ts",children:"<span></span>"})}),"\n",(0,a.jsx)(n.h3,{children:"Still not sure?"}),"\n",(0,a.jsxs)(n.p,{children:["Try reading the regular ",(0,a.jsx)(n.a,{href:"/web/",children:"docs"})," instead."]}),"\n",(0,a.jsx)(o,{title:"Everything about ENS in dApps",href:"/web/",description:"Learn how to use ENS in your dApp, including how to Name and Avatars, lookuping up names, and how to use names in your smart contracts."})]})}var r=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,e.ah)(),s.components);return n?(0,a.jsx)(n,Object.assign({},s,{children:(0,a.jsx)(t,s)})):t(s)}}},function(s){s.O(0,[9774,2888,179],function(){return s(s.s=5475)}),_N_E=s.O()}]);