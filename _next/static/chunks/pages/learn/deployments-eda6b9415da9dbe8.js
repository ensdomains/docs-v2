(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8290],{9651:function(s,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/learn/deployments",function(){return e(3188)}])},3188:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return a}});var t=e(1527),r=e(313);function o(s){let n=Object.assign({h1:"h1",p:"p",h2:"h2",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",a:"a",code:"code",pre:"pre"},(0,r.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{children:"Deployments"}),"\n",(0,t.jsx)(e,{children:(0,t.jsx)(n.p,{children:"This page contains information that is only relevant to developers who would\nlike to interact with the contract manually. Most libraries will handle this\nfor you."})}),"\n",(0,t.jsx)(n.p,{children:"The root ENS contracts are deployed on mainnet, goerli, ropsten, rinkeby, and kovan."}),"\n",(0,t.jsx)(n.h2,{id:"mainnet",children:"Mainnet",tag:"Production"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Network"}),(0,t.jsx)(n.th,{children:"Contract"}),(0,t.jsx)(n.th,{children:"Address"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"ENS Registry"}),(0,t.jsx)(n.td,{children:"0x314159265dD8dbb310642f98f50C066173C1259b"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"Reverse Registrar"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"Public Resolver"}),(0,t.jsx)(n.td,{children:"0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"goerli",children:"Goerli",tag:"Testnet"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Network"}),(0,t.jsx)(n.th,{children:"Contract"}),(0,t.jsx)(n.th,{children:"Address"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"ENS Registry"}),(0,t.jsx)(n.td,{children:"0x112234455c3a32fd11230c42e7bccd4a84e02010"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"Reverse Registrar"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"Public Resolver"}),(0,t.jsx)(n.td,{})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"ropsten",children:"Ropsten",tag:"Testnet"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Network"}),(0,t.jsx)(n.th,{children:"Contract"}),(0,t.jsx)(n.th,{children:"Address"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"ENS Registry"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"Reverse Registrar"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Mainnet"}),(0,t.jsx)(n.td,{children:"Public Resolver"}),(0,t.jsx)(n.td,{})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"but-what-about-multichain",children:"But what about multichain?",tag:"Multichain"}),"\n",(0,t.jsxs)(n.p,{children:["The ENS Protocol can be used on/for any chain! If you are building a dApp and want to use ENS you might have to add a ",(0,t.jsx)(n.a,{href:"/web/libraries",children:"Mainnet RPC to your Wagmi config"}),".\nThis allows tools like wagmi to access mainnet, and load ENS information!"]}),"\n",(0,t.jsxs)(n.p,{children:["To enable this, simply specify ",(0,t.jsx)(n.code,{children:"chainId: 1"})," in your config like so:"]}),"\n",(0,t.jsx)(n.pre,{language:"tsx",code:"import { useAccount, useEnsName, useEnsAvatar } from 'wagmi';\n\nconst Name = () => {\n    const { data: ensName } = useEnsAddress({\n        address: 'luc.eth',\n        chainId: 1, // (1 = Ethereum, 4 = Goerli)\n    });\n\n    return <div>{ensName || address}</div>;\n};\n",meta:"focus=6",children:(0,t.jsx)(n.code,{className:"language-tsx",children:'<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { useAccount</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> useEnsName</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> useEnsAvatar } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;wagmi&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Name</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { data: </span><span style="color: var(--shiki-token-constant)">ensName</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">useEnsAddress</span><span style="color: var(--shiki-color-text)">({</span></span>\n<span><span style="color: var(--shiki-color-text)">        address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;luc.eth&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">        chainId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// (1 = Ethereum, 4 = Goerli)</span></span>\n<span><span style="color: var(--shiki-color-text)">    });</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;{ensName </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> address}&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;;</span></span>\n<span><span style="color: var(--shiki-color-text)">};</span></span>\n<span></span>'})})]})}var a=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),s.components);return n?(0,t.jsx)(n,Object.assign({},s,{children:(0,t.jsx)(o,s)})):o(s)}}},function(s){s.O(0,[9774,2888,179],function(){return s(s.s=9651)}),_N_E=s.O()}]);